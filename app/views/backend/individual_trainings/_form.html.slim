= simple_form_for(@individual_training, url: backend_trainer_individual_trainings_path ) do |f|
  = errors_for(@individual_training)
  - if current_client
    .col-md-6
      #stripe_ind_error.alert.alert-danger style="display:none"
      .panel.panel-success
        .panel-heading Dane do płatności
        .panel-body
          .row.input-field
            = f.input :credit_card, input_html: {'data-stripe' => "number"}
          .row.input-field
            = f.input :card_code, input_html: {'data-stripe' => "cvc"}
          .row.input-field
            .col-md-3
              = select_month nil, {add_month_numbers: true}, {name: nil, id: "card_month", :'data-stripe' => "exp-month"}
            .col-md-3
              = select_year nil, {start_year: Date.today.year, end_year: Date.today.year+15}, {name: nil, id: "card_year", :'data-stripe' => "exp-year"}

  .col-md-6
    label for='datepicker'* Data treningu
    = f.text_field :date_of_training, as: :date, class: 'datepicker',
      placeholder: 'Kliknij'
    label for='input_starttime'* Godzina rozpoczęcia
    = f.text_field :start_on, class: 'timepicker', required: true,
      id: 'input_starttime', placeholder: 'Kliknij'
    = f.input :training_cost_id, required: true, label: "Czas trwania" ,
      collection: @training_costs.map{ |tc| [tc.full_duration, tc.id] },
      prompt: 'Wybierz czas trwania treningu'
    = f.input :trainer_id, as: :hidden, input_html: { value: @trainer.id }
    = f.input :client_id, as: :hidden, input_html: { value: @client.id }
    = f.button :submit, class: "btn btn-primary btn-block"

javascript:
  var payment;

  var errorMessages = {
      incorrect_number: 'Numer karty jest nieprawidłowy.',
      invalid_number: 'Numer karty nie jest prawidłowy.',
      invalid_expiry_month: 'Termin wygaśnięcia karty jest nieprawidłowy.',
      invalid_expiry_year: 'Rok ważności karty jest nieprawidłowy.',
      invalid_cvc: 'Kod zabezpieczający kartę jest nieprawidłowy.',
      expired_card: 'Karta wygasła.',
      incorrect_cvc: 'Kod CVV jest nieprawidłowy.',
      incorrect_zip: 'Kod pocztowy karty jest nieprawidłowy.',
      card_declined: 'Karta została odrzucona.',
      missing: 'Nie ma karty na klienta, która jest w trakcie ładowania.',
      processing_error: 'Podczas przetwarzania karty wystąpił błąd.',
      rate_limit: 'Wystąpił błąd z powodu zbyt szybkiego przetwarzania wniosków API. Daj nam znać, jeśli błąd będzie stale występował.'
  };

  jQuery(function() {
      Stripe.setPublishableKey($('meta[name="stripe-key"]').attr('content'));
      return payment.setupForm();
  });

  payment = {
      setupForm: function() {
          return $('#new_individual_training').submit(function() {
              $('input[type=submit]').attr('disabled', true);
              Stripe.card.createToken($('#new_individual_training'), payment.handleStripeResponse);
              return false;
          });
      },
      handleStripeResponse: function (status, response) {
          if (status === 200) {
              $('#new_individual_training').append($('<input type="hidden" name="stripeToken" />').val(response.id));
              return $('#new_individual_training')[0].submit();

          } else {
            if ( response.error && response.error.type == 'card_error'){
              $('#stripe_ind_error').text(errorMessages[response.error.code]).show();
            } else {
              $('#stripe_ind_error').text('Brak danych do płatności').show();
            }
              return $('input[type=submit]').attr('disabled', false);
          }
      }
  };
